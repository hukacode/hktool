import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id "org.springframework.boot" version "2.4.0" apply false
    id "net.ltgt.apt" version "0.21"
    id "com.diffplug.spotless" version "5.8.2"
    id "com.github.spotbugs" version "4.6.0"
    id 'pmd'
    id 'jacoco'
    id 'maven-publish'
}

description = ""

ext {
    mapstructVersion = "1.4.1.Final"
    jjwtVersion = "0.9.1"
    openCsvVersion = "4.6"
    springfoxSwagger2Version = "2.9.2"
}

configure(allprojects) {
    apply plugin: "java"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "net.ltgt.apt"
    apply plugin: "net.ltgt.apt-idea"
    apply plugin: "com.diffplug.spotless"
    apply plugin: "com.github.spotbugs"
    apply plugin: "pmd"
    apply plugin: "jacoco"
    apply plugin: "maven-publish"

    group = "com.hukacode.hktool"

    java {
        withJavadocJar()
        withSourcesJar()
    }

    jar {
        archiveBaseName = "hktool"
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom SpringBootPlugin.BOM_COORDINATES
        }
    }

    test {
        useJUnitPlatform()
    }

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    test {
        useJUnitPlatform()
//        finalizedBy jacocoTestReport
    }

    jacoco {
    }

    jacocoTestReport {
        dependsOn test
        reports {
            xml.enabled false
            csv.enabled false
            html.destination file("${buildDir}/jacocoHtml")
        }
    }

    pmd {
        consoleOutput = true
//        ruleSets = ["category/java/bestpractices.xml",
//                    "category/java/codestyle.xml",
//                    "category/java/design.xml",
//                    "category/java/documentation.xml",
//                    "category/java/errorprone.xml",
//                    "category/java/performance.xml",
//                    "category/java/security.xml"]
    }

    spotless {
//        ratchetFrom 'origin/main'
        format 'misc', {
            target '*.gradle', '*.md', '.gitignore'
            trimTrailingWhitespace()
            indentWithSpaces(2)
            endWithNewline()
        }
        java {
            toggleOffOn('formatter:off', 'formatter:on')
            target 'src/*/java/**/*.java'
            importOrder('java', 'javax')
            removeUnusedImports()
            googleJavaFormat()
            licenseHeaderFile rootProject.file('config/spotless.license')
        }
    }
    compileJava.dependsOn spotlessApply

    spotbugs {
//        ignoreFailures = false
//        showStackTraces = true
//        showProgress = true
//        effort = 'default'
//        reportLevel = 'default'
//        visitors = ['FindSqlInjection', 'SwitchFallthrough']
//        omitVisitors = ['FindNonShortCircuit']
//        reportsDir = file("$buildDir/spotbugs")
//        includeFilter = file("include.xml")
//        excludeFilter = file("exclude.xml")
//        baselineFile = file("baseline.xml")
//        onlyAnalyze = [ 'com.foobar.MyClass', 'com.foobar.mypkg.*' ]
//        maxHeapSize = '1g'
//        extraArgs = [ '-nested:false' ]
//        jvmArgs = [ '-Duser.language=ja' ]
    }

    dependencies {
        spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.11.0'
    }

    tasks.matching { task -> task.name.startsWith('spotbugs') }.forEach {
        it.reports {
            html {
                enabled = true
                destination = file("$buildDir/spotbugs/main/spotbugs.html")
                stylesheet = 'fancy-hist.xsl'
            }
            xml.enabled = false
        }
    }
}